#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    combos {
        compatible = "zmk,combos";

        minus {
            bindings = <&kp MINUS>;
            key-positions = <17 16>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <17 18>;
        };

        gamemod {
            bindings = <&sl 7>;
            key-positions = <0 30 33>;
        };

        normod {
            bindings = <&sl 0>;
            key-positions = <35 0 4 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q           &kp W      &kp E         &kp R      &kp T                                  &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A           &kp S      &kp D         &kp F      &kp G                                  &kp H      &kp J  &kp K      &kp L    &kp SQT
&kp Z           &kp X      &kp C         &kp V      &kp B                                  &kp N      &kp M  &kp COMMA  &kp DOT  &mt LEFT_WIN SLASH
&kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &lt 4 TAB  &kp SPACE  &lt 3 ESC  &lt 1 BACKSPACE  &kp ENTER                             &kp RSHFT
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp NUMBER_1          &kp NUMBER_2           &kp NUMBER_3      &kp NUMBER_4       &kp NUMBER_5                   &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH                  &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT     &kp SEMI
&none                 &kp GRAVE              &kp MINUS         &kp EQUAL          &none                          &none         &none           &trans        &trans        &none
&trans                &trans                 &trans            &trans             &trans         &trans  &trans  &trans                                                    &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                       &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&trans           &trans        &trans        &trans        &trans                       &kp UNDERSCORE  &kp PLUS       &trans            &trans                &kp NON_US_BACKSLASH
&trans           &trans        &trans        &trans        &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp C_PLAY_PAUSE                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp F5  &kp F6   &kp F7   &kp F8   &kp C_VOLUME_UP                    &bt BT_CLR    &none         &none         &none         &none
&kp F9  &kp F10  &kp F11  &kp F12  &kp C_VOLUME_DOWN                  &none         &none         &none         &none         &bootloader
&trans  &trans   &trans   &trans   &trans             &trans  &trans  &trans                                                  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &none   &none   &none   &none                   &none          &none      &none           &none      &none
&trans  &trans  &trans  &trans  &none                   &kp PAGE_UP    &mkp LCLK  &msc SCRL_UP    &mkp RCLK  &mkp MCLK
&trans  &trans  &trans  &trans  &none                   &kp PAGE_DOWN  &none      &msc SCRL_DOWN  &none      &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                               &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };

        Game {
            bindings = <
&kp ESC         &kp Q     &kp W     &kp E        &kp R                      &trans  &trans  &trans  &trans  &trans
&kp TAB         &kp A     &kp S     &kp D        &kp F                      &trans  &trans  &trans  &trans  &trans
&kp LCTRL       &kp Z     &kp X     &kp C        &kp V                      &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LALT  &kp BSPC  &lt 8 SPACE  &kp SPACE  &kp F8  &trans  &trans                          &trans
            >;
        };

        NumGame {
            bindings = <
&kp ESC    &kp N1    &kp N2    &kp N3  &kp F1                  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp N4    &kp N5    &kp N6  &kp F2                  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp N7    &kp N8    &kp N9  &kp F3                  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp LALT  &kp BSPC  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
